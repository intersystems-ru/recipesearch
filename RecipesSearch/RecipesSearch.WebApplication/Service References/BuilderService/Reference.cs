//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RecipesSearch.WebApplication.BuilderService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BuilderService.IBuilderService")]
    public interface IBuilderService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuilderService/BuildTf", ReplyAction="http://tempuri.org/IBuilderService/BuildTfResponse")]
        void BuildTf();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuilderService/BuildTf", ReplyAction="http://tempuri.org/IBuilderService/BuildTfResponse")]
        System.Threading.Tasks.Task BuildTfAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuilderService/BuildTfIdf", ReplyAction="http://tempuri.org/IBuilderService/BuildTfIdfResponse")]
        void BuildTfIdf();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuilderService/BuildTfIdf", ReplyAction="http://tempuri.org/IBuilderService/BuildTfIdfResponse")]
        System.Threading.Tasks.Task BuildTfIdfAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuilderService/BuildIdf", ReplyAction="http://tempuri.org/IBuilderService/BuildIdfResponse")]
        void BuildIdf();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuilderService/BuildIdf", ReplyAction="http://tempuri.org/IBuilderService/BuildIdfResponse")]
        System.Threading.Tasks.Task BuildIdfAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuilderService/BuildAllTasks", ReplyAction="http://tempuri.org/IBuilderService/BuildAllTasksResponse")]
        void BuildAllTasks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuilderService/BuildAllTasks", ReplyAction="http://tempuri.org/IBuilderService/BuildAllTasksResponse")]
        System.Threading.Tasks.Task BuildAllTasksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuilderService/StopAllTasksUpdating", ReplyAction="http://tempuri.org/IBuilderService/StopAllTasksUpdatingResponse")]
        void StopAllTasksUpdating();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuilderService/StopAllTasksUpdating", ReplyAction="http://tempuri.org/IBuilderService/StopAllTasksUpdatingResponse")]
        System.Threading.Tasks.Task StopAllTasksUpdatingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuilderService/IsTfBuildInProgress", ReplyAction="http://tempuri.org/IBuilderService/IsTfBuildInProgressResponse")]
        bool IsTfBuildInProgress();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuilderService/IsTfBuildInProgress", ReplyAction="http://tempuri.org/IBuilderService/IsTfBuildInProgressResponse")]
        System.Threading.Tasks.Task<bool> IsTfBuildInProgressAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuilderService/IsIdfBuildInProgress", ReplyAction="http://tempuri.org/IBuilderService/IsIdfBuildInProgressResponse")]
        bool IsIdfBuildInProgress();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuilderService/IsIdfBuildInProgress", ReplyAction="http://tempuri.org/IBuilderService/IsIdfBuildInProgressResponse")]
        System.Threading.Tasks.Task<bool> IsIdfBuildInProgressAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuilderService/IsTfIdfBuildInProgress", ReplyAction="http://tempuri.org/IBuilderService/IsTfIdfBuildInProgressResponse")]
        bool IsTfIdfBuildInProgress();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuilderService/IsTfIdfBuildInProgress", ReplyAction="http://tempuri.org/IBuilderService/IsTfIdfBuildInProgressResponse")]
        System.Threading.Tasks.Task<bool> IsTfIdfBuildInProgressAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuilderService/AllTasksBuildInProgress", ReplyAction="http://tempuri.org/IBuilderService/AllTasksBuildInProgressResponse")]
        bool AllTasksBuildInProgress();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuilderService/AllTasksBuildInProgress", ReplyAction="http://tempuri.org/IBuilderService/AllTasksBuildInProgressResponse")]
        System.Threading.Tasks.Task<bool> AllTasksBuildInProgressAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBuilderServiceChannel : global::RecipesSearch.WebApplication.BuilderService.IBuilderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BuilderServiceClient : System.ServiceModel.ClientBase<global::RecipesSearch.WebApplication.BuilderService.IBuilderService>, global::RecipesSearch.WebApplication.BuilderService.IBuilderService {
        
        public BuilderServiceClient() {
        }
        
        public BuilderServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BuilderServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BuilderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BuilderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void BuildTf() {
            base.Channel.BuildTf();
        }
        
        public System.Threading.Tasks.Task BuildTfAsync() {
            return base.Channel.BuildTfAsync();
        }
        
        public void BuildTfIdf() {
            base.Channel.BuildTfIdf();
        }
        
        public System.Threading.Tasks.Task BuildTfIdfAsync() {
            return base.Channel.BuildTfIdfAsync();
        }
        
        public void BuildIdf() {
            base.Channel.BuildIdf();
        }
        
        public System.Threading.Tasks.Task BuildIdfAsync() {
            return base.Channel.BuildIdfAsync();
        }
        
        public void BuildAllTasks() {
            base.Channel.BuildAllTasks();
        }
        
        public System.Threading.Tasks.Task BuildAllTasksAsync() {
            return base.Channel.BuildAllTasksAsync();
        }
        
        public void StopAllTasksUpdating() {
            base.Channel.StopAllTasksUpdating();
        }
        
        public System.Threading.Tasks.Task StopAllTasksUpdatingAsync() {
            return base.Channel.StopAllTasksUpdatingAsync();
        }
        
        public bool IsTfBuildInProgress() {
            return base.Channel.IsTfBuildInProgress();
        }
        
        public System.Threading.Tasks.Task<bool> IsTfBuildInProgressAsync() {
            return base.Channel.IsTfBuildInProgressAsync();
        }
        
        public bool IsIdfBuildInProgress() {
            return base.Channel.IsIdfBuildInProgress();
        }
        
        public System.Threading.Tasks.Task<bool> IsIdfBuildInProgressAsync() {
            return base.Channel.IsIdfBuildInProgressAsync();
        }
        
        public bool IsTfIdfBuildInProgress() {
            return base.Channel.IsTfIdfBuildInProgress();
        }
        
        public System.Threading.Tasks.Task<bool> IsTfIdfBuildInProgressAsync() {
            return base.Channel.IsTfIdfBuildInProgressAsync();
        }
        
        public bool AllTasksBuildInProgress() {
            return base.Channel.AllTasksBuildInProgress();
        }
        
        public System.Threading.Tasks.Task<bool> AllTasksBuildInProgressAsync() {
            return base.Channel.AllTasksBuildInProgressAsync();
        }
    }
}
