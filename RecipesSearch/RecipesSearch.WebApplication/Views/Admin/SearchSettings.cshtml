@using RecipesSearch.WebApplication.Enums
@using RecipesSearch.WebApplication.ViewModels
@model SearchSettingsViewModel
@{
    ViewBag.Title = "Search Settings";

    var resultViews = new List<SelectListItem>();
    resultViews.Add(new SelectListItem
    {
        Text = "Graph", Value = ResultsViews.Graph.ToString()
    });
    resultViews.Add(new SelectListItem
    {
        Text = "List",
        Value = ResultsViews.List.ToString()
    });
    var onlineTfIdfBuildersList = Model.AvailableOnlineTfIdfBuilders
       .Select(name => new SelectListItem { Text = name, Value = name })
       .ToList();
}

<div class="row settings">
    <div class="col-md-6">
        @using (Html.BeginForm("UpdateSearchSettings", "Admin", FormMethod.Post, new { id = "updateSearchSettingsForm" }))
        {
            @Html.HiddenFor(model => model.Id)
            <div class="form-group">
                @Html.LabelFor(model => model.ResultsOnPage)
                @Html.TextBoxFor(model => model.ResultsOnPage, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ResultsOnPage)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ResultsForGraphView)
                @Html.TextBoxFor(model => model.ResultsForGraphView, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ResultsForGraphView)
            </div>
            <div class="form-group">
                 @Html.LabelFor(model => model.DefaultResultsView)
                 @Html.DropDownListFor(
                    model => model.DefaultResultsView,
                    resultViews,
                    new { @class = "form-control" })
                 @Html.ValidationMessageFor(model => model.DefaultResultsView)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.SuggestionsCount)
                @Html.TextBoxFor(model => model.SuggestionsCount, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SuggestionsCount)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.EnableSpellchecking)
                @Html.CheckBoxFor(model => model.EnableSpellchecking)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.EnableSpellcheckingForSuggest)
                @Html.CheckBoxFor(model => model.EnableSpellcheckingForSuggest)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.OnlineTfIdfEnabled)
                @Html.CheckBoxFor(model => model.OnlineTfIdfEnabled)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.MaxOnlineIdfRecipesCount)
                @Html.TextBoxFor(model => model.MaxOnlineIdfRecipesCount, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MaxOnlineIdfRecipesCount)
            </div>
             <div class="form-group">
                @Html.LabelFor(model => model.OnlineTfIdfBuilderName)
                @Html.DropDownListFor(
                    model => model.OnlineTfIdfBuilderName,
                    onlineTfIdfBuildersList,
                    new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OnlineTfIdfBuilderName)
            </div>
            <div class="right">
                <input type="submit" class="btn btn-link" value="Update settings" />
            </div>
        }
    </div>
</div>
