@model RecipesSearch.WebApplication.ViewModels.TfIdfConfigViewModel
@{
    var tfBuildersList = Model.AvailableTfBuilders
      .Select(name => new SelectListItem { Text = name, Value = name })
      .ToList();

    var idfBuildersList = Model.AvailableIdfBuilders
    .Select(name => new SelectListItem { Text = name, Value = name })
    .ToList();
}
@using (Html.BeginForm("UpdateTfIdfConfig", "Admin", FormMethod.Post, new { id = "updateConfigForm" }))
{
    @Html.HiddenFor(model => model.Id)
    <div class="form-group">
        @Html.LabelFor(model => model.TfBuilderName)
        
        @if (!String.IsNullOrEmpty(Model.LastUsedTfBuilder))
        {
           <div>Last used TF builder: @Model.LastUsedTfBuilder</div> 
        }
        
        @Html.DropDownListFor(
                model => model.TfBuilderName,
                tfBuildersList,
                new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.TfBuilderName)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.IdfBuilderName)
        
        @if (!String.IsNullOrEmpty(Model.LastUsedTfBuilder))
        {
            <div>Last used IDF builder: @Model.LastUsedTfBuilder</div>
        }
        
        @Html.DropDownListFor(
                model => model.IdfBuilderName,
                idfBuildersList,
                new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.IdfBuilderName)
    </div>
    <div class="right">
        <input type="submit" class="btn btn-link" value="Update TF/IDF config" />
    </div>
}