<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25" zv="Cache for Windows (x86-64) 2015.1 (Build 220)" ts="2015-02-18 21:33:42">
<Project name="Experimental" LastModified="2015-02-18 21:18:20.641627">
  <Items>
    <ProjectItem name="RecipesSearch.PageAnalyzer" type="CLS"></ProjectItem>
  </Items>
</Project>


<Class name="RecipesSearch.PageAnalyzer">
<TimeChanged>63601,76220.36313</TimeChanged>
<TimeCreated>63598,76265.28244</TimeCreated>

<Method name="GetEntitiesById">
<ClassMethod>1</ClassMethod>
<FormalSpec>id:%Numeric</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#sqlcompile SELECT = odbc
	&sql(declare byid cursor for
	      select Content
          from RecipesSearch.SitePage
          where ID = :id)
    &sql(open byid)
	set dname = "RecipesDomain"
    if (##class(%iKnow.Domain).Exists(dname)) {
	   set domoref=##class(%iKnow.Domain).Open(dname)
	   set stat=domoref.DropData()
	   if 'stat {
		   write "DropData error ",$System.Status.DisplayError(stat)
		   quit
	   } 
    } else { 
	   set domoref=##class(%iKnow.Domain).%New(dname)
	   do domoref.%Save()
	}
        
	set domId=domoref.Id
	if ##class(%iKnow.Configuration).Exists("RecipesConfig") {
       set cfg=##class(%iKnow.Configuration).Open("RecipesConfig")
    } else {
	   set cfg=##class(%iKnow.Configuration).%New("RecipesConfig",0,$LISTBUILD("ru"),"",1)
	   do cfg.%Save()
	}
     	     
	set mylister=##class(%iKnow.Source.File.Lister).%New(domId)
	// do mylister.Init("RecipesConfig","","%iKnow.Source.Converter.Html","")
	set myconverter = ##class(%iKnow.Source.Converter.Html).%New()
	do mylister.Init("RecipesConfig")
	set myloader = ##class(%iKnow.Source.Loader).%New(domId)
	set stat = myloader.SetLister(mylister)
	set cnt = 1
	for {
	   &sql(fetch byid into :Content)
	   quit:(SQLCODE '= 0)
	   do myconverter.BufferString(Content)
	   do myconverter.Convert()
	   set file=##class(%File).%New("C:\temp\page"_cnt_".txt")
	   do file.Open("WSN")
	   do {
	      set curpart = myconverter.NextConvertedPart()
	      do file.Write(curpart)
	   } while curpart '= ""
	   do file.Close()
	   set cnt = cnt + 1
	}
    set dirpath="C:\temp"
    set stat = myloader.ProcessList(dirpath,"txt")
     
    do ##class(%iKnow.Queries.EntityAPI).GetTop(.result,domId,1,50)
  		 
  	set i=1
  	while $data(result(i)) {
	   write $listtostring(result(i),",",1),!
       set i=i+1
    }
     
    if SQLCODE = 100 { set status = $$$OK}
    else { set status = $$$ERROR($$$GeneralError, "SQLCODE: "_SQLCODE)}
    return status
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^RecipesSearch.PageAnalyzerD</DataLocation>
<DefaultData>PageAnalyzerDefaultData</DefaultData>
<IdLocation>^RecipesSearch.PageAnalyzerD</IdLocation>
<IndexLocation>^RecipesSearch.PageAnalyzerI</IndexLocation>
<StreamLocation>^RecipesSearch.PageAnalyzerS</StreamLocation>
<Data name="PageAnalyzerDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="RecipesSearch.SitePage">
<Super>%Persistent</Super>
<TimeChanged>63598,75239.4657</TimeChanged>
<TimeCreated>63581,84906.169887</TimeCreated>

<Property name="URL">
<Type>%String</Type>
<Required>1</Required>
<Parameter name="MAXLEN" value="255"/>
</Property>

<Property name="Content">
<Type>%String</Type>
<Parameter name="MAXLEN" value="100000"/>
</Property>

<Property name="Keywords">
<Type>%String</Type>
<Parameter name="MAXLEN" value="1000"/>
</Property>

<Property name="SiteId">
<Type>%Integer</Type>
<Required>1</Required>
</Property>

<Property name="CreatedDate">
<Type>%DateTime</Type>
<Required>1</Required>
</Property>

<Property name="ModifiedDate">
<Type>%DateTime</Type>
<Required>1</Required>
</Property>

<Index name="MainIDX">
<PrimaryKey>1</PrimaryKey>
<Properties>SiteId,URL</Properties>
</Index>

<Index name="KeywordsIDX">
<Properties>Keywords</Properties>
</Index>

<Method name="Upsert">
<ClassMethod>1</ClassMethod>
<FormalSpec>URL:%String(MAXLEN=255),Content:%String(MAXLEN=100000),Keywords:%String(MAXLEN=1000),SiteId:%Integer</FormalSpec>
<Language>tsql</Language>
<SqlProc>1</SqlProc>
<Implementation><![CDATA[
	IF EXISTS(SELECT * FROM RecipesSearch.SitePage WHERE URL = @URL AND SiteId = @SiteId) THEN BEGIN
		UPDATE RecipesSearch.SitePage SET Content = @Content, Keywords = @Keywords, ModifiedDate = GETUTCDATE()
		WHERE URL = @URL AND SiteId = @SiteId;
	END ELSE BEGIN
		INSERT INTO RecipesSearch.SitePage(SiteId, URL, Content, Keywords, CreatedDate, ModifiedDate) 
			VALUES(@SiteId, @URL, @Content, @Keywords, GETUTCDATE(), GETUTCDATE());
	END
]]></Implementation>
</Method>

<Method name="DeleteRecordsForSiteId">
<ClassMethod>1</ClassMethod>
<FormalSpec>SiteId:%Integer</FormalSpec>
<Language>tsql</Language>
<SqlProc>1</SqlProc>
<Implementation><![CDATA[	DELETE FROM RecipesSearch.SitePage WHERE SiteID = @SiteId;
]]></Implementation>
</Method>

<Method name="DeleteSitesRecords">
<ClassMethod>1</ClassMethod>
<Language>tsql</Language>
<SqlProc>1</SqlProc>
<Implementation><![CDATA[	DELETE FROM RecipesSearch.SitePage;
]]></Implementation>
</Method>

<Query name="GetRecordsBySiteId">
<Type>%SQLQuery</Type>
<SqlName>SitePage_GetRecordsBySiteId</SqlName>
<SqlProc>1</SqlProc>
<SqlQuery>SELECT SiteId AS SiteId, COUNT(*) AS PageCount
FROM SitePage
GROUP BY SiteId</SqlQuery>
<Parameter name="CONTAINID" value="1"/>
<Parameter name="SELECTMODE" value="RUNTIME"/>
</Query>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^RecipesSearch.SitePageD</DataLocation>
<DefaultData>SitePageDefaultData</DefaultData>
<IdLocation>^RecipesSearch.SitePageD</IdLocation>
<IndexLocation>^RecipesSearch.SitePageI</IndexLocation>
<StreamLocation>^RecipesSearch.SitePageS</StreamLocation>
<Data name="SitePageDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>URL</Value>
</Value>
<Value name="3">
<Value>Content</Value>
</Value>
<Value name="4">
<Value>Keyword</Value>
</Value>
<Value name="5">
<Value>SiteId</Value>
</Value>
<Value name="6">
<Value>CreatedDate</Value>
</Value>
<Value name="7">
<Value>ModifiedDate</Value>
</Value>
<Value name="8">
<Value>Keywords</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
